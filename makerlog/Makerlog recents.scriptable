{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "deep-green",
    "glyph" : "check-circle"
  },
  "name" : "Makerlog",
  "script" : "\n\n\/\/ Variables\nconst userId = 834;\nconst API = \"https:\/\/api.getmakerlog.com\/\";\nconst months = [\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\"];\n\n  \/\/ Colors\nlet textSecondary = new Color(\"#9ad8a5\");\nlet textPrimary = new Color(\"#ffffff\");\nlet textPrimary2 = new Color(\"#cdf0d4\");\n\n\/\/ Widget config\nlet data = await getData();\nlet widget = await createWidget(data);\n\nif (!config.runsInWidget) {\n\tawait widget.presentMedium();\n}\n\nScript.setWidget(widget);\nScript.complete();\n\n\/\/ Makerlog data\nasync function getData() {\n\t\n\t\/\/ Get days\n\tlet d = new Date();\n\tlet daysData = [];\n\tfor(let i = 0; i < 3; i++) {\n\n\t\tlet day = await getDay(d);\n\t\tdaysData.push(day);\n\t\tlog(d);\n\n\t\td = new Date(d.getTime() - (1e3 * 60 * 60 * 24));\n\t}\n\n\t\/\/ Get tasks from all data\n\tlet tasks = daysData.map(d => d.data).flat();\n\tlet statuses = tasks.map(task => task.done ? \"done\" : \"todo\");\n\tlet statusCount = {\n\t\t\"done\": 0,\n\t\t\"todo\": 0\n\t};\n\tfor(let status of statuses) {\n\t\tstatusCount[status]++;\n\t}\n\n\treturn statusCount;\n}\n\nasync function getDay(d) {\n\t\n\t\/\/ Generate URL\n\tlet url = `${API}users\/${userId}\/stream\/${d.getFullYear()}\/${months[d.getMonth()]}\/${d.getDate()}`;\n\t\n\t\/\/ Request data\n\tlet dataReq = new Request(url);\n\tlet data = await dataReq.loadJSON();\n\treturn data;\n\n}\n\n\/\/ Widget\nasync function createWidget(counts) {\n\n\t\/\/ Generate widget\n\tlet widget = new ListWidget();\n\n\t  \/\/ Bg colors\n\twidget.backgroundColor = new Color(\"#00B77A\");\n\n\t  \/\/ Content\n\twidget.addSpacer();\n\n\t  \/\/ Top subtitle\n\taddSubtitle(widget, \"Recent to-dos\");\n\n\t \/\/ to-do count\n\taddTitle(widget, `${counts.todo} to-do${counts.todo !== 1 ? \"s\" :\"\"}`);\n\n\t\/\/ Bottom content\n\twidget.addSpacer(8);\n\n\t\/\/ Done tasks\n\taddSubtitle(widget, \"Recently done\")\n\taddAltTitle(widget, `${counts.done} tasks`);\n\n\n\t\/\/ End of content\n\twidget.addSpacer();\n\n\treturn widget;\n}\n\nfunction addSubtitle(widget, str) {\n\tlet subtitle = widget.addText(str);\n\tsubtitle.font = Font.boldSystemFont(16);\n\tsubtitle.textColor = textSecondary;\n\treturn subtitle;\n}\nfunction addTitle(widget, str) {\n\tlet title = widget.addText(str);\n\ttitle.font = Font.boldSystemFont(24);\n\ttitle.textColor = textPrimary;\n\treturn title;\n}\n\nfunction addAltTitle(widget, str) {\n\tlet title = widget.addText(str);\n\ttitle.font = Font.boldSystemFont(24);\n\ttitle.textColor = textPrimary2;\n\treturn title;\n}\n\n\n\n\n\n\nfunction prettyPrint(json) {\n\tlet str = JSON.stringify(json, null, 2);\n\tQuickLook.present(str);\n}",
  "share_sheet_inputs" : [

  ]
}